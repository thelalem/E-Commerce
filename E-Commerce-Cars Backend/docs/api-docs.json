{
  "openapi": "3.0.0",
  "info": {
    "title": "E-Commerce Cars API",
    "version": "1.0.0",
    "description": "API documentation for the E-Commerce Cars platform"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Development Server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "summary": "Get all products",
        "tags": ["Products"],
        "responses": {
          "200": {
            "description": "List of all products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new product",
        "tags": ["Products"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Get a product by ID",
        "tags": ["Products"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The product details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "put": {
        "summary": "Update a product",
        "tags": ["Products"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The product ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a product",
        "tags": ["Products"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/products/search": {
      "get": {
        "summary": "Search, filter, and sort products",
        "tags": ["Products"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Search term for product name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filter by category",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "minPrice",
            "in": "query",
            "description": "Minimum price",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "maxPrice",
            "in": "query",
            "description": "Maximum price",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort by field and order (e.g., 'price:asc', 'price:desc')",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": { "type": "integer", "default": 1 }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of products per page",
            "required": false,
            "schema": { "type": "integer", "default": 10 }
          }
        ],
        "responses": {
          "200": {
            "description": "List of filtered, sorted, and paginated products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "products": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Product" }
                    },
                    "total": { "type": "integer" },
                    "page": { "type": "integer" },
                    "totalPages": { "type": "integer" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation failed"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login a user",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/auth/refresh-token": {
      "post": {
        "summary": "Refresh JWT access token",
        "tags": ["Authentication"],
        "responses": {
          "200": {
            "description": "New access token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": { "type": "string" }
                  }
                }
              }
            }
          },
          "401": { "description": "No refresh token provided" }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout user and clear refresh token cookie",
        "tags": ["Authentication"],
        "responses": {
          "200": { "description": "Logged out successfully" }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "tags": ["Users"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The user ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update user details",
        "tags": ["Users"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The user ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "tags": ["Users"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The user ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/orders": {
      "post": {
        "summary": "Create a new order",
        "tags": ["Orders"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get all orders",
        "tags": ["Orders"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of all orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "summary": "Get an order by ID",
        "tags": ["Orders"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the order"
          }
        ],
        "responses": {
          "200": {
            "description": "Order details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "404": {
            "description": "Order not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/orders/{id}/status": {
      "put": {
        "summary": "Update the status of an order",
        "tags": ["Orders"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the order"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status transition"
          },
          "404": {
            "description": "Order not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/favorites": {
      "get": {
        "summary": "Get all favorite products for the user",
        "tags": ["Favorites"],
        "responses": {
          "200": {
            "description": "List of favorite products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a product to favorites",
        "tags": ["Favorites"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FavoriteRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product added to favorites",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Favorite"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove a product from favorites",
        "tags": ["Favorites"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The favorite ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Product removed from favorites"
          },
          "404": {
            "description": "Favorite not found"
          }
        }
      }
    },
    "/semantic/data": {
      "get": {
        "summary": "Fetch semantic data",
        "tags": ["Semantic"],
        "responses": {
          "200": {
            "description": "Semantic data fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/semantic/query": {
      "post": {
        "summary": "Query ontology",
        "tags": ["Semantic"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "string",
                    "description": "SPARQL query string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Query executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "price": { "type": "number" },
          "category": { "type": "string" },
          "location": { "type": "string" },
          "imageUrl": { "type": "string" },
          "stock": { "type": "number" }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": { "type": "string" },
          "password": { "type": "string" }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": { "type": "string" },
          "user": { "$ref": "#/components/schemas/User" }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "required": ["name", "email", "password", "role"],
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string" },
          "password": { "type": "string" },
          "role": { "type": "string" }
        }
      },
      "RegisterResponse": {
        "type": "object",
        "properties": {
          "user": { "$ref": "#/components/schemas/User" },
          "token": { "type": "string" }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "email": { "type": "string" },
          "role": { "type": "string" },
          "profilePicture": { "type": "string" },
          "address": { "type": "string" }
        }
      },
      "CreateProductRequest": {
        "type": "object",
        "required": ["name", "description", "price", "category", "location", "imageUrl", "stock"],
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" },
          "price": { "type": "number" },
          "category": { "type": "string" },
          "location": { "type": "string" },
          "imageUrl": { "type": "string" },
          "stock": { "type": "number" }
        }
      },
      "UpdateProductRequest": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" },
          "price": { "type": "number" },
          "category": { "type": "string" },
          "location": { "type": "string" },
          "imageUrl": { "type": "string" },
          "stock": { "type": "number" }
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string" },
          "role": { "type": "string" },
          "profilePicture": { "type": "string" },
          "address": { "type": "string" }
        }
      },
      "CreateOrderRequest": {
        "type": "object",
        "required": ["products"],
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "product": {
                  "type": "string",
                  "description": "The ID of the product"
                },
                "quantity": {
                  "type": "number",
                  "description": "The quantity of the product"
                }
              },
              "required": ["product", "quantity"]
            }
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the order"
          },
          "buyer": {
            "type": "string",
            "description": "The ID of the buyer"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "product": {
                  "$ref": "#/components/schemas/Product"
                },
                "quantity": {
                  "type": "number",
                  "description": "The quantity of the product"
                },
                "price": {
                  "type": "number",
                  "description": "The price of the product"
                }
              }
            }
          },
          "totalPrice": {
            "type": "number",
            "description": "The total price of the order"
          },
          "status": {
            "type": "string",
            "description": "The status of the order",
            "enum": ["pending", "shipped", "delivered", "cancelled"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the order was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the order was last updated"
          }
        }
      },
      "UpdateOrderStatusRequest": {
        "type": "object",
        "required": ["status"],
        "properties": {
          "status": {
            "type": "string",
            "description": "The new status of the order",
            "enum": ["pending", "shipped", "delivered", "cancelled"]
          }
        }
      },
      "FavoriteRequest": {
        "type": "object",
        "properties": {
          "productId": { "type": "string" }
        }
      },
      "Favorite": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "user": { "type": "string" },
          "product": { "$ref": "#/components/schemas/Product" }
        }
      }
    }
  }
}